{"version":3,"file":"frappe-gantt.min.js","sources":["../src/svg_utils.js","../src/arrow.js","../src/date_utils.js","../src/bar.js","../src/popup.js","../src/index.js"],"sourcesContent":["export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre',\n    ],\n    it: [\n        'Gennaio',\n        'Febbraio',\n        'Marzo',\n        'Aprile',\n        'Maggio',\n        'Giugno',\n        'Luglio',\n        'Agosto',\n        'Settembre',\n        'Ottobre',\n        'Novembre',\n        'Dicembre',\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre',\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık',\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月',\n    ],\n    de: [\n        'Januar',\n        'Februar',\n        'März',\n        'April',\n        'Mai',\n        'Juni',\n        'Juli',\n        'August',\n        'September',\n        'Oktober',\n        'November',\n        'Dezember',\n    ],\n    hu: [\n        'Január',\n        'Február',\n        'Március',\n        'Április',\n        'Május',\n        'Június',\n        'Július',\n        'Augusztus',\n        'Szeptember',\n        'Október',\n        'November',\n        'December',\n    ],\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_names[lang][+values[1]],\n            MMM: month_names[lang][+values[1]],\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group,\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group,\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group,\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second'),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        if (this.invalid) return;\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        if (this.invalid) return;\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import Arrow from './arrow';\nimport Bar from './bar';\nimport date_utils from './date_utils';\nimport Popup from './popup';\nimport { $, createSVG } from './svg_utils';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            if (typeof task.row_id === 'number') {\n                task._index = task.row_id;\n            }\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        let counter_rows = 0;\n        const distinctRows = [...new Set(this.tasks.map(x => x.row_id))];\n        for (let row of distinctRows){\n            counter_rows = counter_rows + 1;\n        }\n\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let row of distinctRows) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","values","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","split","forEach","addEventListener","e","delegatedTarget","target","closest","call","this","matches","parentNode","value","getAttribute","key","Arrow","constructor","gantt","from_task","to_task","calculate_path","draw","start_x","$bar","getX","getWidth","condition","options","padding","start_y","header_height","bar_height","task","_index","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","getY","getHeight","left","d","id","update","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","it","ru","ptBr","fr","tr","zh","de","hu","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","includes","replace","push","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","Bar","set_defaults","prepare","action_completed","prepare_values","prepare_helpers","invalid","height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","bar_group","handle_group","SVGElement","prototype","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","row_id","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","distinctRows","Set","row","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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UACA,YACA,aAEJC,GAAI,CACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAEJC,KAAM,CACF,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,UACA,OACA,QACA,MACA,OACA,UACA,OACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,OACA,QACA,OACA,QACA,QACA,UACA,SACA,UACA,QACA,OACA,QACA,UAEJC,GAAI,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,OAEJC,GAAI,CACA,SACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,YACA,aACA,UACA,WACA,aAIO,IAAAC,EAAA,CACXC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QAC/C,GAAIF,aAAgBG,KAChB,OAAOH,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAKtE,MAAM,KAEzB0E,EAAaE,EAAM,GACd5E,MAAMuE,GACNM,KAAKC,GAAQC,SAASD,EAAK,MAChCH,EAAaC,EAAM,IAAMA,EAAM,GAAG5E,MAAMwE,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIM,EAAON,EAUX,OARIC,GAAcA,EAAWM,SACA,GAArBN,EAAWM,SACXN,EAAW,GAAK,KAAOA,EAAW,GAClCA,EAAW,GAAiC,IAA5BO,WAAWP,EAAW,KAE1CK,EAAOA,EAAKG,OAAOR,IAGhB,IAAIF,QAAQO,KAI3BI,UAAUd,EAAMe,GAAY,GACxB,KAAMf,aAAgBG,MAClB,MAAM,IAAIa,UAAU,yBAExB,MAAMN,EAAOxE,KAAK+E,gBAAgBjB,GAAMO,KAAI,CAACC,EAAKU,KACpC,IAANA,IAEAV,GAAY,GAILW,EAASX,EAAM,GADhB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"}